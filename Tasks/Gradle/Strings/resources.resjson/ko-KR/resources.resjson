{
  "loc.friendlyName": "Gradle",
  "loc.helpMarkDown": "[자세한 정보](http://go.microsoft.com/fwlink/?LinkID=613720)",
  "loc.description": "Gradle 래퍼 스크립트를 사용하여 빌드",
  "loc.instanceNameFormat": "gradlew $(tasks)",
  "loc.group.displayName.junitTestResults": "JUnit 테스트 결과",
  "loc.group.displayName.codeCoverage": "코드 검사",
  "loc.group.displayName.advanced": "고급",
  "loc.input.label.wrapperScript": "Gradle 래퍼",
  "loc.input.help.wrapperScript": "`Gradle 래퍼 스크립트`의 리포지토리 루트로부터의 상대 경로입니다.",
  "loc.input.label.options": "옵션",
  "loc.input.label.tasks": "작업",
  "loc.input.label.cwd": "작업 디렉터리",
  "loc.input.help.cwd": "Gradle 빌드를 실행할 작업 디렉터리입니다. 기본값은 리포지토리 루트입니다.",
  "loc.input.label.publishJUnitResults": "Publish to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results produced by the Gradle build to VSTS/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSTS/TFS.",
  "loc.input.label.testResultsFiles": "테스트 결과 파일",
  "loc.input.help.testResultsFiles": "테스트 결과 파일 경로입니다. 와일드카드를 사용할 수 있습니다. 예를 들어, 이름이 TEST-로 시작하는 모든 파일을 표시하기 위해 `**/TEST-*.xml`을 사용할 수 있습니다.",
  "loc.input.label.testRunTitle": "테스트 실행 제목",
  "loc.input.help.testRunTitle": "테스트 실행의 이름을 제공하세요.",
  "loc.input.label.codeCoverageTool": "CodeCoverage 도구",
  "loc.input.help.codeCoverageTool": "코드 검사 도구를 선택하세요.",
  "loc.input.label.classFilesDirectories": "클래스 파일 디렉터리",
  "loc.input.help.classFilesDirectories": "클래스 파일, 보관 파일(jar, war 등)이 포함된 디렉터리의 쉼표로 구분된 목록입니다. 코드 검사는 디렉터리에 있는 클래스 파일에 대해 보고됩니다. 이 작업은 gradle 빌드의 기본 클래스 디렉터리인 build/main/classes 아래에 있는 클래스를 검색합니다.",
  "loc.input.label.classFilter": "클래스 포함/제외 필터",
  "loc.input.help.classFilter": "코드 검사 수집에서 클래스를 포함하거나 제외할 필터의 쉼표로 구분된 목록입니다. 예: `+:com.*`,`+:org.*`,`-:my.app*.*`를 참조하세요.",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 설정 방법",
  "loc.input.help.javaHomeSelection": "빌드 중에 검색될 JDK 버전을 선택하거나 수동으로 JDK 경로를 입력하여 JAVA_HOME을 설정합니다.",
  "loc.input.label.jdkVersion": "JDK 버전",
  "loc.input.help.jdkVersion": "선택한 JDK 버전의 경로에 대한 검색을 시도하고 그에 따라 JAVA_HOME을 설정하게 됩니다.",
  "loc.input.label.jdkUserInputPath": "JDK 경로",
  "loc.input.help.jdkUserInputPath": "JAVA_HOME을 지정된 경로로 설정합니다.",
  "loc.input.label.jdkArchitecture": "JDK 아키텍처",
  "loc.input.help.jdkArchitecture": "원하는 경우 JDK의 아키텍처(x86, x64)를 제공하세요."
}