{
  "loc.friendlyName": "Gradle",
  "loc.helpMarkDown": "[Altre informazioni](http://go.microsoft.com/fwlink/?LinkID=613720)",
  "loc.description": "Consente di compilare con uno script wrapper di Gradle",
  "loc.instanceNameFormat": "gradlew $(tasks)",
  "loc.group.displayName.junitTestResults": "Risultati del test JUnit",
  "loc.group.displayName.codeCoverage": "Code coverage",
  "loc.group.displayName.advanced": "Avanzate",
  "loc.input.label.wrapperScript": "Wrapper di Gradle",
  "loc.input.help.wrapperScript": "Percorso relativo dalla radice del repository al valore di `Script wrapper di Gradle`.",
  "loc.input.label.options": "Opzioni",
  "loc.input.label.tasks": "Attività",
  "loc.input.label.cwd": "Directory di lavoro",
  "loc.input.help.cwd": "Directory di lavoro in cui eseguire la compilazione Gradle. Per impostazione predefinita, corrisponde alla radice del repository.",
  "loc.input.label.publishJUnitResults": "Publish to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results produced by the Gradle build to VSTS/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSTS/TFS.",
  "loc.input.label.testResultsFiles": "File dei risultati del test",
  "loc.input.help.testResultsFiles": "Percorso dei file dei risultati del test. È possibile usare i caratteri jolly, ad esempio `**/TEST-*.xml` per individuare tutti i file XML il cui nome inizia con TEST-.",
  "loc.input.label.testRunTitle": "Titolo esecuzione dei test",
  "loc.input.help.testRunTitle": "Consente di specificare un nome per l'esecuzione dei test.",
  "loc.input.label.codeCoverageTool": "Strumento di code coverage",
  "loc.input.help.codeCoverageTool": "Consente di selezionare lo strumento di code coverage.",
  "loc.input.label.classFilesDirectories": "Directory file di classe",
  "loc.input.help.classFilesDirectories": "Elenco di directory delimitate da virgole contenenti file di classe e file di archivio (jar, war e così via). I report di code coverage vengono creati per i file di classe presenti nelle directory. L'attività consente di cercare classi presenti in build/main/classes che costituisce la directory delle classi predefinita per le compilazioni di Gradle",
  "loc.input.label.classFilter": "Filtri di inclusione/esclusione classe",
  "loc.input.help.classFilter": "Elenco di filtri delimitati da virgole per includere o escludere classi dalla raccolta delle informazioni sul code coverage, ad esempio `+:com.*`,`+:org.*`,`-:my.app*.*`.",
  "loc.input.label.javaHomeSelection": "Imposta JAVA_HOME per",
  "loc.input.help.javaHomeSelection": "Consente di impostare JAVA_HOME selezionando una versione di JDK che verrà individuata durante le compilazioni oppure immettendo manualmente un percorso JDK.",
  "loc.input.label.jdkVersion": "Versione JDK",
  "loc.input.help.jdkVersion": "Prova a individuare il percorso della versione selezionata di JDK e imposta JAVA_HOME di conseguenza.",
  "loc.input.label.jdkUserInputPath": "Percorso JDK",
  "loc.input.help.jdkUserInputPath": "Consente di impostare JAVA_HOME sul percorso specificato.",
  "loc.input.label.jdkArchitecture": "Architettura JDK",
  "loc.input.help.jdkArchitecture": "Consente, facoltativamente, di specificare l'architettura (x86, x64) di JDK."
}