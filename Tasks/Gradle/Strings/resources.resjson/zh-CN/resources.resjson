{
  "loc.friendlyName": "Gradle",
  "loc.helpMarkDown": "[详细信息](http://go.microsoft.com/fwlink/?LinkID=613720)",
  "loc.description": "使用 Gradle 包装器脚本生成",
  "loc.instanceNameFormat": "gradlew $(tasks)",
  "loc.group.displayName.junitTestResults": "JUnit 测试结果",
  "loc.group.displayName.codeCoverage": "代码覆盖率",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.wrapperScript": "Gradle Wrapper",
  "loc.input.help.wrapperScript": "从存储库根路径到“Gradle 包装器脚本”的相对路径。",
  "loc.input.label.options": "选项",
  "loc.input.label.tasks": "任务",
  "loc.input.label.cwd": "工作目录",
  "loc.input.help.cwd": "要在其中运行 Gradle 生成的工作目录。默认为存储库根路径。",
  "loc.input.label.publishJUnitResults": "Publish to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results produced by the Gradle build to VSTS/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSTS/TFS.",
  "loc.input.label.testResultsFiles": "测试结果文件",
  "loc.input.help.testResultsFiles": "测试结果文件路径。可以使用通配符。例如，\"**/TEST-*.xml\" 表示名称以 TEST- 开头的所有 xml 文件。",
  "loc.input.label.testRunTitle": "测试运行标题",
  "loc.input.help.testRunTitle": "为测试运行提供一个名称。",
  "loc.input.label.codeCoverageTool": "CodeCoverage 工具",
  "loc.input.help.codeCoverageTool": "选择代码覆盖率工具。",
  "loc.input.label.classFilesDirectories": "类文件目录",
  "loc.input.help.classFilesDirectories": "包含类文件、存档文件(jar 和 war 等)的目录列表，以逗号分隔。报告目录中存在的类文件的代码覆盖率。任务在“生成/主/类”下搜索类，“生成/主/类”是 Gradle 版本的默认类目录",
  "loc.input.label.classFilter": "类包含/排除筛选器",
  "loc.input.help.classFilter": "用于在收集代码覆盖率时包含或排除类的筛选器列表，以逗号分隔。例如，\"+:com.*\"、\"+:org.*\"、\"-:my.app*.*\"。",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 设置方法",
  "loc.input.help.javaHomeSelection": "可通过选择将在生成期间发现的 JDK 版本或手动输入 JDK 路径来设置 JAVA_HOME。",
  "loc.input.label.jdkVersion": "JDK 版本",
  "loc.input.help.jdkVersion": "将尝试发现所选 JDK 版本的路径并相应地设置 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK 路径",
  "loc.input.help.jdkUserInputPath": "将 JAVA_HOME 设置到给定路径。",
  "loc.input.label.jdkArchitecture": "JDK 体系结构",
  "loc.input.help.jdkArchitecture": "可以选择提供 JDK 的体系结构(x86、x64)。"
}