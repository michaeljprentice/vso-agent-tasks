{
  "loc.friendlyName": "Ant",
  "loc.helpMarkDown": "[Plus d'informations](http://go.microsoft.com/fwlink/?LinkID=613718)",
  "loc.description": "Générer avec Apache Ant",
  "loc.instanceNameFormat": "Ant $(options) $(antBuildFile)",
  "loc.group.displayName.junitTestResults": "Résultats du test JUnit",
  "loc.group.displayName.codeCoverage": "Couverture du code",
  "loc.group.displayName.advanced": "Avancé",
  "loc.input.label.antBuildFile": "Fichier de build Ant",
  "loc.input.help.antBuildFile": "Chemin relatif de la racine de dépôt du 'fichier de build Ant'.",
  "loc.input.label.options": "Options",
  "loc.input.help.options": "Indiquez les options à passer à la ligne de commande Ant. Vous pouvez fournir vos propres propriétés (par exemple ***-DmyProperty=myPropertyValue***), et utiliser les variables intégrées (par exemple ***-DcollectionId=$(system.collectionId)***). Sinon, les variables intégrées sont déjà définies en tant que variables d'environnement durant la génération, et peuvent être passées directement (par exemple ***-DcollectionIdAsEnvVar=%SYSTEM_COLLECTIONID%***).",
  "loc.input.label.targets": "Cible(s)",
  "loc.input.label.publishJUnitResults": "Publish to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit Test results produced by the Ant build to VSTS/TFS. Each test result file matching `Test Results Files` will be published as a test run in VSTS/TFS.",
  "loc.input.label.testResultsFiles": "Fichiers des résultats des tests",
  "loc.input.help.testResultsFiles": "Chemin d'accès des fichiers de résultats de test. Les caractères génériques sont autorisés. Par exemple, '**/TEST-*.xml' pour tous les fichiers xml dont le nom commence par TEST-.",
  "loc.input.label.testRunTitle": "Titre de l'exécution du test",
  "loc.input.help.testRunTitle": "Déploiement",
  "loc.input.label.codeCoverageTool": "Outil de couverture du code",
  "loc.input.help.codeCoverageTool": "Sélectionnez l'outil de couverture du code. Pour l'installation de l'agent local, consultez le lien vers les informations supplémentaires.",
  "loc.input.label.classFilesDirectories": "Répertoires de fichiers de classe",
  "loc.input.help.classFilesDirectories": "Liste de chemins relatifs séparés par une virgule, allant du fichier de build ant aux répertoires contenant les fichiers de classe, les fichiers d'archives (jar, war etc.). La couverture du code est signalée pour les fichiers de classe présents dans les répertoires. Exemple : target/classes,target/testClasses.",
  "loc.input.label.classFilter": "Filtres d'inclusion/exclusion de classes",
  "loc.input.help.classFilter": "Liste de filtres séparés par une virgule, permettant d'inclure ou d'exclure des classes dans la collecte de la couverture du code. Exemple : '+:com.*','+:org.*','-:my.app*.*'.",
  "loc.input.label.srcDirectories": "Répertoires de fichiers sources",
  "loc.input.help.srcDirectories": "Liste de chemins relatifs séparés par une virgule, allant du fichier de build ant aux répertoires sources. Les rapports de couverture du code les utilisent pour mettre le code source en surbrillance. Exemple : src/java,src/Test.",
  "loc.input.label.antHomeUserInputPath": "Définir le chemin de ANT_HOME",
  "loc.input.help.antHomeUserInputPath": "Si elle est définie, cette valeur remplace les variables d'environnement ANT_HOME existantes par le chemin spécifié.",
  "loc.input.label.javaHomeSelection": "Définir JAVA_HOME par",
  "loc.input.help.javaHomeSelection": "Définit JAVA_HOME en sélectionnant une version de JDK qui sera découverte au moment des builds ou en tapant le chemin de JDK.",
  "loc.input.label.jdkVersion": "Version de JDK",
  "loc.input.help.jdkVersion": "Essaiera de découvrir le chemin d'accès à la version du JDK sélectionné et définira JAVA_HOME en conséquence.",
  "loc.input.label.jdkUserInputPath": "Chemin d'accès à JDK",
  "loc.input.help.jdkUserInputPath": "Définissez JAVA_HOME sur le chemin d'accès indiqué.",
  "loc.input.label.jdkArchitecture": "Architecture de JDK",
  "loc.input.help.jdkArchitecture": "Indiquez éventuellement l'architecture (x86, x64) du JDK."
}